Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o)
                              ./main.o (__fixunssfsi)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o) (__subsf3)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_mul_sf.o)
                              ./main.o (__mulsf3)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o)
                              ./main.o (__gtsf2)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ge_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o) (__gesf2)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_lt_sf.o)
                              ./main.o (__ltsf2)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_sf_to_si.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o) (__fixsfsi)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_thenan_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__thenan_sf)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__epilogue_restores__)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_pack_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__pack_f)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_unpack_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__unpack_f)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fpcmp_parts_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o) (__fpcmp_parts_f)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
LOAD ./display.o
LOAD ./ds13o2.o
LOAD ./main.o
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x12a8
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000008a        0x8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x0000000000000092        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
                0x0000000000000092                __vector_22
                0x0000000000000092                __vector_1
                0x0000000000000092                __vector_24
                0x0000000000000092                __vector_12
                0x0000000000000092                __bad_interrupt
                0x0000000000000092                __vector_6
                0x0000000000000092                __vector_3
                0x0000000000000092                __vector_23
                0x0000000000000092                __vector_25
                0x0000000000000092                __vector_11
                0x0000000000000092                __vector_13
                0x0000000000000092                __vector_17
                0x0000000000000092                __vector_19
                0x0000000000000092                __vector_7
                0x0000000000000092                __vector_5
                0x0000000000000092                __vector_4
                0x0000000000000092                __vector_9
                0x0000000000000092                __vector_2
                0x0000000000000092                __vector_21
                0x0000000000000092                __vector_15
                0x0000000000000092                __vector_8
                0x0000000000000092                __vector_14
                0x0000000000000092                __vector_10
                0x0000000000000092                __vector_16
                0x0000000000000092                __vector_18
                0x0000000000000092                __vector_20
 .text          0x0000000000000096       0xde ./display.o
                0x0000000000000096                initOutput
                0x00000000000000ac                setRegisters
                0x0000000000000144                setTime
 .text          0x0000000000000174      0x312 ./ds13o2.o
                0x0000000000000174                ds1302_init
                0x00000000000001aa                ds1302_reset
                0x00000000000001e4                ds1302_write_byte
                0x000000000000025e                ds1302_read_byte
                0x00000000000002c8                ds1302_write
                0x000000000000031c                ds1302_read
                0x000000000000037e                gettime
                0x000000000000040e                settime
 .text          0x0000000000000486      0x2fa ./main.o
                0x0000000000000486                main
 .text          0x0000000000000780        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000780        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000780       0x58 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o)
                0x0000000000000780                __fixunssfsi
 .text          0x00000000000007d8      0x354 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o)
                0x0000000000000a70                __subsf3
                0x0000000000000ad2                __addsf3
 .text          0x0000000000000b2c      0x1f4 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_mul_sf.o)
                0x0000000000000b2c                __mulsf3
 .text          0x0000000000000d20       0x60 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o)
                0x0000000000000d20                __gtsf2
 .text          0x0000000000000d80       0x60 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ge_sf.o)
                0x0000000000000d80                __gesf2
 .text          0x0000000000000de0       0x60 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_lt_sf.o)
                0x0000000000000de0                __ltsf2
 .text          0x0000000000000e40       0xa8 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_sf_to_si.o)
                0x0000000000000e40                __fixsfsi
 .text          0x0000000000000ee8        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_thenan_sf.o)
 .text          0x0000000000000ee8        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .text          0x0000000000000ee8        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .text          0x0000000000000ee8      0x1ac /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_pack_sf.o)
                0x0000000000000ee8                __pack_f
 .text          0x0000000000001094       0xf0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_unpack_sf.o)
                0x0000000000001094                __unpack_f
 .text          0x0000000000001184       0xb2 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fpcmp_parts_sf.o)
                0x0000000000001184                __fpcmp_parts_f
                0x0000000000001236                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000001236        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000001236        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000001236       0x38 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
                0x0000000000001236                __prologue_saves__
 .text.libgcc   0x000000000000126e       0x36 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
                0x000000000000126e                __epilogue_restores__
                0x00000000000012a4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000012a4        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                0x00000000000012a4                exit
                0x00000000000012a4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000012a4        0x4 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000012a8                _etext = .

.data           0x0000000000800100       0x20 load address 0x00000000000012a8
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
 .data          0x0000000000800100        0x0 ./display.o
 .data          0x0000000000800100        0x0 ./ds13o2.o
 .data          0x0000000000800100       0x18 ./main.o
                0x0000000000800100                D1_HFVE
                0x0000000000800101                D1_SEVN
                0x0000000000800102                D1_NINE
                0x0000000000800103                D1_ELVN
                0x0000000000800104                D1_OCLK
                0x0000000000800105                D1_SIX
                0x0000000000800106                D1_EGHT
                0x0000000000800107                D1_HTEN
                0x0000000000800108                D2_ONE
                0x0000000000800109                D2_THRE
                0x000000000080010a                D2_TO
                0x000000000080010b                D2_QUAR
                0x000000000080010c                D2_TWLV
                0x000000000080010d                D2_TWO
                0x000000000080010e                D2_FOUR
                0x000000000080010f                D2_PAST
                0x0000000000800110                D3_MTEN
                0x0000000000800111                D3_MFVE
                0x0000000000800112                D3_AB
                0x0000000000800113                D3_AC
                0x0000000000800114                D3_HALF
                0x0000000000800115                D3_TWTY
                0x0000000000800116                D3_ITIS
                0x0000000000800117                D3_AA
 .data          0x0000000000800118        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800118        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800118        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o)
 .data          0x0000000000800118        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o)
 .data          0x0000000000800118        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_mul_sf.o)
 .data          0x0000000000800118        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o)
 .data          0x0000000000800118        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ge_sf.o)
 .data          0x0000000000800118        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_lt_sf.o)
 .data          0x0000000000800118        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_sf_to_si.o)
 .data          0x0000000000800118        0x8 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_thenan_sf.o)
                0x0000000000800118                __thenan_sf
 .data          0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .data          0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .data          0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_pack_sf.o)
 .data          0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_unpack_sf.o)
 .data          0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fpcmp_parts_sf.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800120                . = ALIGN (0x2)
                0x0000000000800120                _edata = .
                0x0000000000800120                PROVIDE (__data_end, .)

.bss            0x0000000000800120        0x0
                0x0000000000800120                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
 .bss           0x0000000000800120        0x0 ./display.o
 .bss           0x0000000000800120        0x0 ./ds13o2.o
 .bss           0x0000000000800120        0x0 ./main.o
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_mul_sf.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ge_sf.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_lt_sf.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_sf_to_si.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_thenan_sf.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_pack_sf.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_unpack_sf.o)
 .bss           0x0000000000800120        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fpcmp_parts_sf.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800120                PROVIDE (__bss_end, .)
                0x00000000000012a8                __data_load_start = LOADADDR (.data)
                0x00000000000012c8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800120        0x0
                0x0000000000800120                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800120                PROVIDE (__noinit_end, .)
                0x0000000000800120                _end = .
                0x0000000000800120                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x165c
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
 .stab          0x00000000000006b4      0x444 ./display.o
                                        0x450 (size before relaxing)
 .stab          0x0000000000000af8      0x69c ./ds13o2.o
                                        0x858 (size before relaxing)
 .stab          0x0000000000001194      0x4c8 ./main.o
                                        0x684 (size before relaxing)

.stabstr        0x0000000000000000      0xa7a
 *(.stabstr)
 .stabstr       0x0000000000000000      0xa7a /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(wordclock.elf elf32-avr)
LOAD linker stubs
