Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodqi4.o)
                              ./DS1302.o (__udivmodqi4)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
                              ./main.o (__divmodhi4)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o)
                              ./DS1302.o (__fixunssfsi)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o) (__subsf3)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_mul_sf.o)
                              ./DS1302.o (__mulsf3)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o)
                              ./DS1302.o (__gtsf2)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ge_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o) (__gesf2)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_lt_sf.o)
                              ./DS1302.o (__ltsf2)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_sf_to_si.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o) (__fixsfsi)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_thenan_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__thenan_sf)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__epilogue_restores__)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_pack_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__pack_f)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_unpack_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o) (__unpack_f)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fpcmp_parts_sf.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o) (__fpcmp_parts_f)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
                              ./main.o (__iob)

Allocating common symbols
Common symbol       size              file

__iob               0x6               /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
LOAD ./DS1302.o
LOAD ./display.o
LOAD ./main.o
LOAD ./uart.o
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x3e18
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_11
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_14
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_18
                0x00000000000000a2                __vector_20
 .text          0x00000000000000a6      0x9d8 ./DS1302.o
                0x00000000000000a6                initClock
                0x00000000000000d0                _write_out
                0x000000000000041c                _register_bcd_to_dec_
                0x0000000000000494                _register_bcd_to_dec
                0x00000000000004b0                _register_dec_to_bcd_
                0x0000000000000554                _register_dec_to_bcd
                0x0000000000000576                _read_in
                0x0000000000000702                read_register
                0x000000000000076a                write_register
                0x00000000000007ca                halt
                0x000000000000080e                getSeconds
                0x0000000000000824                getMinutes
                0x0000000000000838                getHour
                0x00000000000008ce                getDate
                0x00000000000008e4                getMonth
                0x00000000000008fa                getDay
                0x0000000000000910                getYear
                0x000000000000092c                seconds
                0x000000000000094a                minutes
                0x0000000000000968                hour
                0x000000000000098e                date
                0x00000000000009ac                month
                0x00000000000009ca                day
                0x00000000000009e8                year
                0x0000000000000a16                addMinutes
                0x0000000000000a4a                addHours
 .text          0x0000000000000a7e       0xf2 ./display.o
                0x0000000000000a7e                initOutput
                0x0000000000000a9a                setRegisters
                0x0000000000000b24                setTime
 .text          0x0000000000000b70     0x266e ./main.o
                0x0000000000000b70                initDebug
                0x0000000000000b9a                initTimeInput
                0x0000000000000c0c                debounce
                0x0000000000001022                taster
                0x00000000000010c6                __vector_5
                0x0000000000001142                setUp
                0x0000000000001174                correctHour
                0x00000000000011d6                between
                0x000000000000121c                displayCurrentTime
                0x00000000000014ac                checkAllOutputs
                0x00000000000030aa                loop
                0x00000000000031be                main
 .text          0x00000000000031de       0xac ./uart.o
                0x00000000000031de                uart_init
                0x0000000000003218                uart_putchar
                0x0000000000003262                uart_getchar
 .text          0x000000000000328a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x000000000000328a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
 .text          0x000000000000328a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text          0x000000000000328a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000328a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .text          0x000000000000328a       0x58 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o)
                0x000000000000328a                __fixunssfsi
 .text          0x00000000000032e2      0x354 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o)
                0x000000000000357a                __subsf3
                0x00000000000035dc                __addsf3
 .text          0x0000000000003636      0x1f4 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_mul_sf.o)
                0x0000000000003636                __mulsf3
 .text          0x000000000000382a       0x60 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o)
                0x000000000000382a                __gtsf2
 .text          0x000000000000388a       0x60 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ge_sf.o)
                0x000000000000388a                __gesf2
 .text          0x00000000000038ea       0x60 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_lt_sf.o)
                0x00000000000038ea                __ltsf2
 .text          0x000000000000394a       0xa8 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_sf_to_si.o)
                0x000000000000394a                __fixsfsi
 .text          0x00000000000039f2        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_thenan_sf.o)
 .text          0x00000000000039f2        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x00000000000039f2        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .text          0x00000000000039f2        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .text          0x00000000000039f2      0x1ac /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_pack_sf.o)
                0x00000000000039f2                __pack_f
 .text          0x0000000000003b9e       0xf0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_unpack_sf.o)
                0x0000000000003b9e                __unpack_f
 .text          0x0000000000003c8e       0xb2 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fpcmp_parts_sf.o)
                0x0000000000003c8e                __fpcmp_parts_f
 .text          0x0000000000003d40        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
                0x0000000000003d40                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000003d40       0x18 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodqi4.o)
                0x0000000000003d40                __udivmodqi4
 .text.libgcc   0x0000000000003d58       0x26 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
                0x0000000000003d58                __divmodhi4
                0x0000000000003d58                _div
 .text.libgcc   0x0000000000003d7e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000003d7e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000003d7e        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000003d7e       0x28 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
                0x0000000000003d7e                __udivmodhi4
 .text.libgcc   0x0000000000003da6       0x38 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
                0x0000000000003da6                __prologue_saves__
 .text.libgcc   0x0000000000003dde       0x36 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
                0x0000000000003dde                __epilogue_restores__
                0x0000000000003e14                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000003e14        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                0x0000000000003e14                exit
                0x0000000000003e14                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000003e14        0x4 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000003e18                _etext = .

.data           0x0000000000800100       0x24 load address 0x0000000000003e18
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
 .data          0x0000000000800100        0x0 ./DS1302.o
 .data          0x0000000000800100        0x0 ./display.o
 .data          0x0000000000800100       0x1c ./main.o
                0x0000000000800100                uart_output
                0x000000000080010e                uart_input
 .data          0x000000000080011c        0x0 ./uart.o
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o)
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o)
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_mul_sf.o)
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o)
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ge_sf.o)
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_lt_sf.o)
 .data          0x000000000080011c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_sf_to_si.o)
 .data          0x000000000080011c        0x8 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_thenan_sf.o)
                0x000000000080011c                __thenan_sf
 .data          0x0000000000800124        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800124        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .data          0x0000000000800124        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .data          0x0000000000800124        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_pack_sf.o)
 .data          0x0000000000800124        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_unpack_sf.o)
 .data          0x0000000000800124        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fpcmp_parts_sf.o)
 .data          0x0000000000800124        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800124                . = ALIGN (0x2)
                0x0000000000800124                _edata = .
                0x0000000000800124                PROVIDE (__data_end, .)

.bss            0x0000000000800124        0x7
                0x0000000000800124                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800124        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
 .bss           0x0000000000800124        0x0 ./DS1302.o
 .bss           0x0000000000800124        0x0 ./display.o
 .bss           0x0000000000800124        0x1 ./main.o
 .bss           0x0000000000800125        0x0 ./uart.o
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fixunssfsi.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_addsub_sf.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_mul_sf.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_gt_sf.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ge_sf.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_lt_sf.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_sf_to_si.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_thenan_sf.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_pack_sf.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_unpack_sf.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_fpcmp_parts_sf.o)
 .bss           0x0000000000800125        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800125        0x6 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
                0x0000000000800125                __iob
                0x000000000080012b                PROVIDE (__bss_end, .)
                0x0000000000003e18                __data_load_start = LOADADDR (.data)
                0x0000000000003e3c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080012b        0x0
                0x000000000080012b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080012b                PROVIDE (__noinit_end, .)
                0x000000000080012b                _end = .
                0x000000000080012b                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x3b10
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o
 .stab          0x00000000000006b4     0x1008 ./DS1302.o
                                       0x1014 (size before relaxing)
 .stab          0x00000000000016bc      0x2a0 ./display.o
                                        0x45c (size before relaxing)
 .stab          0x000000000000195c     0x1ca4 ./main.o
                                       0x1e60 (size before relaxing)
 .stab          0x0000000000003600      0x24c ./uart.o
                                        0x45c (size before relaxing)
 .stab          0x000000000000384c      0x2c4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
                                        0x30c (size before relaxing)

.stabstr        0x0000000000000000     0x1540
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1540 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(wordclock_arduino.elf elf32-avr)
LOAD linker stubs
