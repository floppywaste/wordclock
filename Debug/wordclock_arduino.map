Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodqi4.o)
                              ./DS1302.o (__udivmodqi4)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
                              ./main.o (__iob)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(printf.o)
                              ./main.o (printf)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(printf.o) (vfprintf)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (strnlen_P)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strnlen.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (strnlen)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(fputc.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (fputc)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (__ultoa_invert)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(printf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(printf.o) (__epilogue_restores__)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o) (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

__iob               0x6               /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
LOAD ./DS1302.o
LOAD ./display.o
LOAD ./main.o
LOAD ./uart.o
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xb60
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_11
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_14
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_18
                0x00000000000000a2                __vector_20
 .text          0x00000000000000a6      0x27c ./DS1302.o
                0x00000000000000a6                _write_out
                0x00000000000000e0                init
                0x00000000000000e6                _read_in
                0x0000000000000124                read_register
                0x0000000000000138                _register_bcd_to_dec_
                0x0000000000000180                _register_bcd_to_dec
                0x0000000000000188                write_register
                0x00000000000001a4                _register_dec_to_bcd_
                0x0000000000000208                _register_dec_to_bcd
                0x0000000000000210                getSeconds
                0x000000000000021a                getMinutes
                0x0000000000000222                getHour
                0x000000000000028e                getDate
                0x0000000000000298                getMonth
                0x00000000000002a2                getDay
                0x00000000000002ac                getYear
                0x00000000000002be                seconds
                0x00000000000002ca                minutes
                0x00000000000002d6                hour
                0x00000000000002f0                date
                0x00000000000002fc                month
                0x0000000000000308                day
                0x0000000000000314                year
 .text          0x0000000000000322       0x66 ./display.o
                0x0000000000000322                initOutput
                0x0000000000000328                setRegisters
                0x0000000000000364                setTime
 .text          0x0000000000000388      0x1da ./main.o
                0x0000000000000388                initDebug
                0x00000000000003a6                main
 .text          0x0000000000000562       0x50 ./uart.o
                0x0000000000000562                uart_init
                0x0000000000000584                uart_putchar
                0x00000000000005a4                uart_getchar
 .text          0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text          0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
 .text          0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(printf.o)
 .text          0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .text          0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .text          0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strnlen.o)
 .text          0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(fputc.o)
 .text          0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .text          0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .text          0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .text          0x00000000000005b2        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                0x00000000000005b2                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000000000005b2       0x18 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodqi4.o)
                0x00000000000005b2                __udivmodqi4
 .text.libgcc   0x00000000000005ca        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000005ca        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .text.avr-libc
                0x00000000000005ca       0x2a /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(printf.o)
                0x00000000000005ca                printf
 .text.avr-libc
                0x00000000000005f4      0x3ba /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                0x00000000000005f4                vfprintf
 .text.avr-libc
                0x00000000000009ae       0x16 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                0x00000000000009ae                strnlen_P
 .text.avr-libc
                0x00000000000009c4       0x16 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strnlen.o)
                0x00000000000009c4                strnlen
 .text.avr-libc
                0x00000000000009da       0x58 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(fputc.o)
                0x00000000000009da                fputc
 .text.avr-libc
                0x0000000000000a32       0xbc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                0x0000000000000a32                __ultoa_invert
 .text.libgcc   0x0000000000000aee       0x38 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
                0x0000000000000aee                __prologue_saves__
 .text.libgcc   0x0000000000000b26       0x36 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
                0x0000000000000b26                __epilogue_restores__
 .text.libgcc   0x0000000000000b5c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000b5c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000b5c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                0x0000000000000b5c                exit
                0x0000000000000b5c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000b5c        0x4 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000b60                _etext = .

.data           0x0000000000800100       0x68 load address 0x0000000000000b60
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 .data          0x0000000000800100        0x0 ./DS1302.o
 .data          0x0000000000800100        0x0 ./display.o
 .data          0x0000000000800100       0x68 ./main.o
                0x0000000000800134                D1_HFVE
                0x0000000000800135                D1_SEVN
                0x0000000000800136                D1_NINE
                0x0000000000800137                D1_ELVN
                0x0000000000800138                D1_OCLK
                0x0000000000800139                D1_SIX
                0x000000000080013a                D1_EGHT
                0x000000000080013b                D1_HTEN
                0x000000000080013c                D2_ONE
                0x000000000080013d                D2_THRE
                0x000000000080013e                D2_TO
                0x000000000080013f                D2_QUAR
                0x0000000000800140                D2_TWLV
                0x0000000000800141                D2_TWO
                0x0000000000800142                D2_FOUR
                0x0000000000800143                D2_PAST
                0x0000000000800144                D3_MTEN
                0x0000000000800145                D3_MFVE
                0x0000000000800146                D3_AB
                0x0000000000800147                D3_AC
                0x0000000000800148                D3_HALF
                0x0000000000800149                D3_TWTY
                0x000000000080014a                D3_ITIS
                0x000000000080014b                D3_AA
                0x000000000080014c                uart_output
                0x000000000080015a                uart_input
 .data          0x0000000000800168        0x0 ./uart.o
 .data          0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
 .data          0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(printf.o)
 .data          0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .data          0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .data          0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strnlen.o)
 .data          0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(fputc.o)
 .data          0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .data          0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .data          0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .data          0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800168                . = ALIGN (0x2)
                0x0000000000800168                _edata = .
                0x0000000000800168                PROVIDE (__data_end, .)

.bss            0x0000000000800168        0x6
                0x0000000000800168                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 .bss           0x0000000000800168        0x0 ./DS1302.o
 .bss           0x0000000000800168        0x0 ./display.o
 .bss           0x0000000000800168        0x0 ./main.o
 .bss           0x0000000000800168        0x0 ./uart.o
 .bss           0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
 .bss           0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(printf.o)
 .bss           0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .bss           0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .bss           0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strnlen.o)
 .bss           0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(fputc.o)
 .bss           0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .bss           0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_prologue.o)
 .bss           0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_epilogue.o)
 .bss           0x0000000000800168        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800168        0x6 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
                0x0000000000800168                __iob
                0x000000000080016e                PROVIDE (__bss_end, .)
                0x0000000000000b60                __data_load_start = LOADADDR (.data)
                0x0000000000000bc8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080016e        0x0
                0x000000000080016e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080016e                PROVIDE (__noinit_end, .)
                0x000000000080016e                _end = .
                0x000000000080016e                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x30b4
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 .stab          0x00000000000006b4      0xb64 ./DS1302.o
                                        0xb70 (size before relaxing)
 .stab          0x0000000000001218      0x264 ./display.o
                                        0x420 (size before relaxing)
 .stab          0x000000000000147c      0x498 ./main.o
                                        0x654 (size before relaxing)
 .stab          0x0000000000001914      0x24c ./uart.o
                                        0x45c (size before relaxing)
 .stab          0x0000000000001b60      0x2c4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
                                        0x30c (size before relaxing)
 .stab          0x0000000000001e24      0x18c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(printf.o)
                                        0x36c (size before relaxing)
 .stab          0x0000000000001fb0      0x978 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                                        0xb58 (size before relaxing)
 .stab          0x0000000000002928       0x9c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                                         0xa8 (size before relaxing)
 .stab          0x00000000000029c4       0x9c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strnlen.o)
                                         0xa8 (size before relaxing)
 .stab          0x0000000000002a60      0x1d4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(fputc.o)
                                        0x3b4 (size before relaxing)
 .stab          0x0000000000002c34      0x480 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                                        0x48c (size before relaxing)

.stabstr        0x0000000000000000     0x1915
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1915 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(wordclock_arduino.elf elf32-avr)
LOAD linker stubs
